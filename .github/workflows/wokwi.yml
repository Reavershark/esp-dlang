name: "Wokwi-CI: Build and test examples"

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - example: hello_world
            target: esp32
            test: true
            expect_text: "Hello from D!"
          - example: hello_world
            target: esp32s2
            test: true
            expect_text: "Hello from D!"
          - example: hello_world
            target: esp32s3
            test: true
            expect_text: "Hello from D!"

          - example: malloc
            target: esp32
            test: true
            expect_text: "Blocks of 1024 bytes allocated on the heap"
          - example: malloc
            target: esp32s2
            test: true
            expect_text: "Blocks of 1024 bytes allocated on the heap"
          - example: malloc
            target: esp32s3
            test: true
            expect_text: "Blocks of 1024 bytes allocated on the heap"

          - example: nobetterc
            target: esp32
            test: true
            expect_text: "Some fibonacci numbers: 1 1 2 3 5 8 13 21"
          - example: nobetterc
            target: esp32s2
            test: true
            expect_text: "Some fibonacci numbers: 1 1 2 3 5 8 13 21"
          - example: nobetterc
            target: esp32s3
            test: true
            expect_text: "Some fibonacci numbers: 1 1 2 3 5 8 13 21"

    runs-on: ubuntu-latest
    container:
      image: jmeeuws/esp-dlang
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Build examples/${{ matrix.example }}
        run: |
          export HOME=/root
          export PATH="/opt/ldc/bin:$PATH"
          ulimit -n 4096
          source /opt/esp-idf/export.sh >/dev/null
          cd ./examples/${{ matrix.example }}/
          (cd ./idf-project/debug/ && idf.py set-target ${{ matrix.target }}) 
          dub build --deep --arch=xtensa-esp32-none-elf
      - name: Setup test files
        if: ${{ matrix.test }}
        run: |
          cat > wokwi.toml <<EOF
          [wokwi]
          version  = 1
          elf      = "./examples/${{ matrix.example }}/idf-project/debug/build/${{ matrix.example }}.elf"
          firmware = "./examples/${{ matrix.example }}/idf-project/debug/build/${{ matrix.example }}.bin"
          EOF
          cp ./.github/workflows/wokwi/diagram-${{ matrix.target }}.json ./diagram.json
      - name: Test using wokwi
        if: ${{ matrix.test }}
        uses: wokwi/wokwi-ci-action@v1
        with:
          token: ${{ secrets.WOKWI_CLI_TOKEN }}
          timeout: 5000
          expect_text: "${{ matrix.expect_text }}"
